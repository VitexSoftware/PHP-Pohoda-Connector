<?php

namespace Test\mServer;

use mServer\Client;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2021-01-01 at 21:47:41.
 */
class ClientTest extends \PHPUnit\Framework\TestCase {

    /**
     * @var Client
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(): void {
        $this->object = new Client();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(): void {
        
    }

    /**
     * @covers mServer\Client::processInit
     * @todo   Implement testprocessInit().
     */
    public function testprocessInit() {
        $this->assertEquals('', $this->object->processInit());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers mServer\Client::logBanner
     */
    public function testlogBanner() {
        $this->object->logBanner();
    }

    /**
     * @covers mServer\Client::setUp
     */
    public function testsetUp() {
        $this->object->setUp(['url' => 'http://localhost:12345']);
        $this->assertEquals('http://localhost:12345', $this->object->url);
    }

    /**
     * @covers mServer\Client::setAuth
     */
    public function testsetAuth() {
        $this->assertTrue($this->object->setAuth());
    }

    /**
     * @covers mServer\Client::setInstance
     * @todo   Implement testsetInstance().
     */
    public function testsetInstance() {
        $this->assertEquals('', $this->object->setInstance());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers mServer\Client::setApplication
     * @todo   Implement testsetApplication().
     */
    public function testsetApplication() {
        $this->assertEquals('', $this->object->setApplication());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers mServer\Client::setCheckDuplicity
     * @todo   Implement testsetCheckDuplicity().
     */
    public function testsetCheckDuplicity() {
        $this->assertEquals('', $this->object->setCheckDuplicity());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers mServer\Client::curlInit
     */
    public function testcurlInit() {
        $this->assertTrue($this->object->curlInit());
    }

    /**
     * @covers mServer\Client::setPostFields
     */
    public function testsetPostFields() {
        $this->object->setPostFields(['test']);
        $this->assertEquals(['test'], $this->object->postFields,);
    }

    /**
     * @covers mServer\Client::doCurlRequest
     * @todo   Implement testdoCurlRequest().
     */
    public function testdoCurlRequest() {
        $this->assertEquals('', $this->object->doCurlRequest());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers mServer\Client::performRequest
     * @todo   Implement testperformRequest().
     */
    public function testperformRequest() {
        $this->assertEquals('', $this->object->performRequest());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers mServer\Client::processResponse
     * @todo   Implement testprocessResponse().
     */
    public function testprocessResponse() {
        $this->assertEquals('', $this->object->processResponse());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers mServer\Client::getStatus
     */
    public function testgetStatus() {
        $this->assertTrue($this->object->getStatus());
    }

    /**
     * @covers mServer\Client::takeData
     */
    public function testtakeData() {
        $this->object->takeData(['test' => 'true'], true);
        $this->assertEquals(['test' => 'true'], $this->object->getData());
    }

    /**
     * @covers mServer\Client::create
     * @todo   Implement testcreate().
     */
    public function testcreate() {
        $this->assertEquals('', $this->object->create());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers mServer\Client::addToPohoda
     * @todo   Implement testaddToPohoda().
     */
    public function testaddToPohoda() {
        $this->assertEquals('', $this->object->addToPohoda());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers mServer\Client::updateInPohoda
     * @todo   Implement testupdateInPohoda().
     */
    public function testupdateInPohoda() {
        $this->assertEquals('', $this->object->updateInPohoda());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers mServer\Client::filterToMe
     */
    public function testfilterToMe() {
        $this->assertEquals('id', $this->object->filterToMe());
    }

    /**
     * @covers mServer\Client::getColumnsFromPohoda
     * @todo   Implement testgetColumnsFromPohoda().
     */
    public function testgetColumnsFromPohoda() {
        $this->assertEquals('', $this->object->getColumnsFromPohoda());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers mServer\Client::__wakeup
     */
    public function test__wakeup() {
        $this->assertEquals('', $this->object->__wakeup());
    }

}
